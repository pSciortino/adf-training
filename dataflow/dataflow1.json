{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Customer_Blob",
						"type": "DatasetReference"
					},
					"name": "Customer"
				},
				{
					"dataset": {
						"referenceName": "CustomerLocation_Blob",
						"type": "DatasetReference"
					},
					"name": "CustomerLocation"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Customer_SQL",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Lookup1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "HashSensitiveData"
				},
				{
					"name": "Select2"
				}
			],
			"script": "source(output(\n\t\tCustomerID as short,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\trowguid as string,\n\t\tModifiedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Customer\nsource(output(\n\t\tCustomerID as short,\n\t\tAddressID as short,\n\t\tAddressType as string,\n\t\tModifiedDate as string,\n\t\tCountryRegion as string,\n\t\tStateProvince as string,\n\t\tCity as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CustomerLocation\nCustomer, CustomerLocation lookup(Customer@CustomerID == CustomerLocation@CustomerID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 select(mapColumn(\n\t\tCustomerID = Customer@CustomerID,\n\t\tTitle_sensitive = Title,\n\t\tFirstName_sensitive = FirstName,\n\t\tMiddleName_sensitive = MiddleName,\n\t\tLastName_sensitive = LastName,\n\t\tSuffix_sensitive = Suffix,\n\t\tCompanyName,\n\t\tSalesPerson,\n\t\tEmailAddress_sensitive = EmailAddress,\n\t\tPhone_sensitive = Phone,\n\t\tPasswordHash,\n\t\tPasswordSalt,\n\t\trowguid,\n\t\tModifiedDate = Customer@ModifiedDate,\n\t\tAddressID,\n\t\tAddressType,\n\t\tCountryRegion,\n\t\tStateProvince,\n\t\tCity\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(each(match(right(name, length(\"_sensitive\")) == \"_sensitive\"), $$ = sha2(256, $$))) ~> HashSensitiveData\nHashSensitiveData select(mapColumn(\n\t\tTitle = Title_sensitive,\n\t\tFirstName = FirstName_sensitive,\n\t\tMiddleName = MiddleName_sensitive,\n\t\tLastName = LastName_sensitive,\n\t\tSuffix = Suffix_sensitive,\n\t\tCompanyName,\n\t\tSalesPerson,\n\t\tEmailAddress = EmailAddress_sensitive,\n\t\tPhone_sensitive,\n\t\tPasswordHash,\n\t\tPasswordSalt,\n\t\trowguid,\n\t\tModifiedDate,\n\t\tAddressID,\n\t\tAddressType,\n\t\tCountryRegion,\n\t\tStateProvince,\n\t\tCity\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 sink(input(\n\t\tCustomerID as integer,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\trowguid as string,\n\t\tCountryRegion as string,\n\t\tStateProvince as string,\n\t\tCity as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}